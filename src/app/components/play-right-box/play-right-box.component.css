.location-box {
    display: flex;
    align-items: center; /* vertically center the text */
    justify-content: center; /* horizontally center the text */
    border: 1px solid #ccc;
    padding: 20px;
    margin: 10px;
    border-radius: 5px;
    box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.1);
    background-color: grey;
    color: white;
    position: relative;
    cursor: pointer;
}

.highlight-button{
    background-color: #1976d2;
}

.highlight-button:hover {
    border: 3px solid gold;
}

.min-level {
    position: absolute;
    top: 10px;
    right: 10px;
    font-size: 12px; /* or adjust to your preference */
    background-color: #f9f9f9; /* or adjust to your preference */
    padding: 3px;
    border-radius: 3px;
}

.locations-container {
    margin-top: 20px;
    max-height: 400px;  /* or any height that fits your design */
    width: 100%;  /* optional, adjust as needed */
    position: relative;
    z-index: 1; /* ensures it's above the vertical boxes */
}

.pokemon-container {
    position: relative;
    width: 100%;
    height: 100%;
 }
 
 /* Style for the image */
 .pokemon-image {
    width: 60%;
    height: auto;
    justify-items: center;
    align-items: center;
    display: block;
    margin: 0 auto;
 }

.pokemon-name {
    position: absolute;
    top: 10px;  /* adjust as needed */
    left: 10px; /* adjust as needed */
    background-color: lightblue;
    padding: 5px;
    border-radius: 4px;
 }
 
 .pokemon-level {
    position: absolute;
    top: 10px;   /* adjust as needed */
    right: 10px; /* adjust as needed */
    background-color: lightblue;
    padding: 5px;
    border-radius: 4px;
 }

 .run-button {
    width: 30%;
    justify-content: center;
    margin: 5px;
    background-color: #1976d2;
    color: white; /* White text on the red button */
    border-color: gold;
    border-radius: 5px;
    padding: 10px 20px;
    cursor: pointer;
    position: absolute; /* Position it relative to the large-box */
    font-size: 36px;    /* Adjust the font size if needed */
    right: 0;
    left: auto;  /* override the left positioning */
    transform: translateY(-40%);
    bottom: 0%;
}

.run-button:hover {
    border: 3px solid gold;
}

.fight-button {
    width: 30%;
    justify-content: center;
    margin: 5px;
    background-color: #1976d2;
    color: white; /* White text on the red button */
    border-color: gold;
    border-radius: 5px;
    padding: 10px 20px;
    cursor: pointer;
    position: absolute; /* Position it relative to the large-box */
    font-size: 36px;    /* Adjust the font size if needed */
    left: 50%;
    transform: translateX(-50%) translateY(-40%);
    bottom: 0%;
}

.fight-button:hover {
    border: 3px solid gold;
}

.catch-button {
    width: 30%;
    justify-content: center;
    margin: 5px;
    background-color: #1976d2;
    color: white; /* White text on the red button */
    border-color: gold;
    border-radius: 5px;
    padding: 10px 20px;
    cursor: pointer;
    position: absolute; /* Position it relative to the large-box */
    font-size: 36px;    /* Adjust the font size if needed */
    float: right;
    left: 0;
    transform: translateY(-40%);
    bottom: 0%;
}



.catch-button:hover {
    border: 3px solid gold;
}

.catch-button-disabled{
    width: 30%;
    justify-content: center;
    margin: 5px;
    background-color: grey;
    color: white; /* White text on the red button */
    border-color: gold;
    border-radius: 5px;
    padding: 10px 20px;
    cursor: pointer;
    position: absolute; /* Position it relative to the large-box */
    font-size: 36px;    /* Adjust the font size if needed */
    float: right;
    left: 0;
    transform: translateY(-40%);
    bottom: 0%;
}

.button-list{
    margin-top: 60px;
    display: flex;
    position: relative;
}

.main-container {
    position: relative;
    border: 3px solid transparent;
}

.locations-container {
    /* existing styles if any */
    position: relative;
    min-height: 300px;
    z-index: 1; /* ensures it's above the vertical boxes */
}

.vertical-boxes {
    display: flex;
    flex-direction: column;
    position: absolute;
    height: 100%;
    right: -100px; /* Adjust this value according to your design */
    top: 0;
}

.box {
    width: 95px; 
    height: 100%;
    background-color:  #1976d2;
    margin-bottom: 15px;
    color: white;
    text-align-last: center;
    /* rounded corners on the right side */
    border-top-right-radius: 5px; /* adjust the value to your preference */
    border-bottom-right-radius: 5px;

    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
}

.zone-levels{
    color: white;
    font-size: 28px; /* adjust as needed */
}

/* If you don't want margin for the last box */
.box:last-child {
    margin-bottom: 0;
}

.info-container {
    display: flex;
    align-items: center; 
    position: absolute;
    top: 10px; 
    left: 50%;
    transform: translateX(-50%);
    width: 95%; /* setting a width for diagnostic purposes */
}

.pokemon-name, .pokemon-level {
    position: static; /* make sure it's not positioned absolutely */
    background-color: lightblue;
    padding: 5px;
    border-radius: 4px;
    margin: 0 10px;
}

.health-bar-container {
    flex: 1; /* it should grow and shrink equally */
    height: 20px;
    background-color: pink; /* temporary: just to see the box */
    border-radius: 10px;
    overflow: hidden;
    margin: 0 10px;
}

.health-bar-current {
    height: 100%;
    background-color: green;
    width: 100%;  /* This will be overridden by the Angular code, but it's good to have a default. */
}

@keyframes flashRedBorder {
    0%, 100% { border-color: transparent; } /* starts and ends at transparent */
    50% { border-color: red; } /* midpoint is red */
}

@keyframes shake {
    10%, 90% {
        transform: translate3d(-1px, 0, 0);
    }
    
    20%, 80% {
        transform: translate3d(2px, 0, 0);
    }

    30%, 50%, 70% {
        transform: translate3d(-3px, 0, 0);
    }

    40%, 60% {
        transform: translate3d(3px, 0, 0);
    }
}

.crit-flash {
    margin-top: -13px;
    height: 460px;
    animation: 
        flashRedBorder 1s forwards, 
        shake 0.5s cubic-bezier(.36,.07,.19,.97) both;
}