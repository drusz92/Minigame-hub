{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-cookie-service\";\nimport * as i3 from \"src/app/services/win.service\";\nimport * as i4 from \"@angular/common\";\n\nconst _c0 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\n\nfunction GameListComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵlistener(\"click\", function GameListComponent_div_3_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const game_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.selectGame(game_r1));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const game_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(2, _c0, game_r1.hasWon ? \"darkgreen\" : \"#1976d2\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", game_r1.displayName, \" \");\n  }\n}\n\nexport let GameListComponent = /*#__PURE__*/(() => {\n  class GameListComponent {\n    constructor(http, cookieService, winService) {\n      this.http = http;\n      this.cookieService = cookieService;\n      this.winService = winService;\n      this.games = [];\n      this.subscriptions = [];\n      this.isInitialLoad = true;\n      this.gameSelected = new EventEmitter();\n    }\n\n    ngOnInit() {\n      this.loadGames();\n      const sub = this.winService.reloadGameList$.subscribe(() => {\n        this.loadGames();\n      });\n      this.subscriptions.push(sub);\n    }\n\n    ngOnDestroy() {\n      this.subscriptions.forEach(sub => sub.unsubscribe());\n    }\n\n    loadGames() {\n      this.http.get('/assets/games.json').subscribe(data => {\n        this.games = data;\n        this.games.forEach(game => {\n          let hasWonCookie = this.cookieService.get(game.name + 'Won');\n          game.hasWon = hasWonCookie === 'true';\n        });\n\n        if (this.isInitialLoad && this.games.length > 0) {\n          // Step 2: Check the flag\n          this.gameSelected.emit(this.games[0]);\n          this.isInitialLoad = false; // Set the flag to false after emitting\n        }\n      });\n    }\n\n    selectGame(game) {\n      this.winService.announceGameListReload();\n      this.gameSelected.emit(game);\n    }\n\n  }\n\n  GameListComponent.ɵfac = function GameListComponent_Factory(t) {\n    return new (t || GameListComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.CookieService), i0.ɵɵdirectiveInject(i3.WinService));\n  };\n\n  GameListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GameListComponent,\n    selectors: [[\"app-game-list\"]],\n    outputs: {\n      gameSelected: \"gameSelected\"\n    },\n    decls: 4,\n    vars: 1,\n    consts: [[1, \"minigames-title\"], [1, \"games-container\"], [\"class\", \"game-box\", 3, \"ngStyle\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"game-box\", 3, \"ngStyle\", \"click\"]],\n    template: function GameListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\", 0);\n        i0.ɵɵtext(1, \"Minigames:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵtemplate(3, GameListComponent_div_3_Template, 2, 4, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.games);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgStyle],\n    styles: [\".games-container[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;justify-content:start}.game-box[_ngcontent-%COMP%]{width:calc(25% - 10px);box-sizing:border-box;margin:5px;height:150px;border:1px solid #000;text-align:center;display:flex;justify-content:center;align-items:center;color:#fff;font-family:Roboto,Arial,sans-serif;background-color:#1976d2;border-radius:8px}.minigames-title[_ngcontent-%COMP%]{text-align:center;margin-bottom:10px}\"]\n  });\n  return GameListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}